{"version":3,"sources":["api/fetch.ts","api/url.ts","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/index.js","api/clusternode.ts","views/clusternode/ClusterNodeList.tsx"],"names":["Method","parseQuery","data","query","datas","k","push","length","join","init","method","GET","body","JSON","stringify","headers","requestJSON","url","a","fetch","res","ok","json","Error","statusText","requestString","text","prefix","URL_NAMESPACE_NAMES","URL_NAMESPACES","URL_CLUSTER_NODES","URL_SERVICES","URL_INSTANCES","URL_INSTANCE","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","CheckableTag","_a","_classNames","customizePrefixCls","prefixCls","className","checked","onChange","onClick","restProps","getPrefixCls","React","ConfigContext","cls","classNames","_defineProperty","concat","_extends","PresetColorRegex","RegExp","PresetColorTypes","PresetStatusColorRegex","PresetStatusColorTypes","InternalTag","ref","style","children","icon","color","onClose","closeIcon","_a$closable","closable","props","_React$useContext","direction","_React$useState","_React$useState2","_slicedToArray","visible","setVisible","isPresetColor","test","tagStyle","backgroundColor","undefined","presetColor","tagClassName","handleCloseClick","stopPropagation","defaultPrevented","isNeedWave","type","tagProps","omit","iconNode","kids","tagNode","CloseOutlined","Wave","Tag","displayName","NodeStatus","useState","useEffect","columns","title","dataIndex","key","render","status","DOWN","CluserNodeList","clusterNodes","setClusterNodes","loading","setLoading","then","catch","message","error","rowKey","record","id","dataSource","pagination"],"mappings":"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","file":"static/js/7.abb8996d.chunk.js","sourcesContent":["import \"whatwg-fetch\";\r\n\r\nexport enum Method {\r\n  GET = \"GET\",\r\n  POST = \"POST\",\r\n  PUT = \"PUT\",\r\n  DELETE = \"DELETE\",\r\n}\r\n\r\nfunction parseQuery<T>(data: T) {\r\n  let query = \"\";\r\n  if (data) {\r\n    const datas = [];\r\n    for (const k in data) {\r\n      if (k) {\r\n        datas.push(`${k}=${data[k]}`);\r\n      }\r\n    }\r\n    if (datas.length > 0) {\r\n      query = \"?\" + datas.join(\"&\");\r\n    }\r\n  }\r\n  return query;\r\n}\r\n\r\nfunction init<T>(method: Method, data: T) {\r\n  if (method === Method.GET) {\r\n    return {};\r\n  }\r\n  return {\r\n    method,\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-Type\": \"application/json; charset=utf-8\"\r\n    }\r\n  }\r\n}\r\n\r\nexport async function requestJSON<T, S>(url: string, method: Method, data: T): Promise<S> {\r\n  let query = \"\";\r\n  if (method === Method.GET) {\r\n    query = parseQuery<T>(data);\r\n  }\r\n  const res = await fetch(url + query, init(method, data));\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  throw new Error(res.statusText);\r\n}\r\n\r\nexport async function requestString<T>(url: string, method: Method, data: T): Promise<string> {\r\n  let query = \"\";\r\n  if (method === Method.GET) {\r\n    query = parseQuery(data);\r\n  }\r\n  const res = await fetch(url + query, init(method, data));\r\n  if (res.ok) {\r\n    return res.text();\r\n  }\r\n  throw new Error(res.statusText);\r\n}\r\n","let prefix = \"http://localhost:9080\";\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  prefix = \"\";\r\n}\r\n\r\n\r\nconst URL_NAMESPACE_NAMES = prefix + \"/console/namespace/names\";\r\nconst URL_NAMESPACES = prefix + \"/console/namespaces\";\r\nconst URL_CLUSTER_NODES = prefix + \"/console/cluster/nodes\";\r\nconst URL_SERVICES = prefix + \"/console/services\";\r\nconst URL_INSTANCES = prefix + \"/console/instances\";\r\n\r\nconst URL_INSTANCE = prefix + \"/api/instance\";\r\n\r\n\r\nexport {\r\n  URL_NAMESPACE_NAMES,\r\n  URL_NAMESPACES,\r\n  URL_CLUSTER_NODES,\r\n  URL_SERVICES,\r\n  URL_INSTANCES,\r\n  URL_INSTANCE\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\n\nvar CheckableTag = function CheckableTag(_a) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      checked = _a.checked,\n      onChange = _a.onChange,\n      onClick = _a.onClick,\n      restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var handleClick = function handleClick(e) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable-checked\"), checked), _classNames), className);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  }));\n};\n\nexport default CheckableTag;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport CheckableTag from './CheckableTag';\nimport { ConfigContext } from '../config-provider';\nimport { PresetColorTypes, PresetStatusColorTypes } from '../_util/colors';\nimport Wave from '../_util/wave';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\nvar PresetStatusColorRegex = new RegExp(\"^(\".concat(PresetStatusColorTypes.join('|'), \")$\"));\n\nvar InternalTag = function InternalTag(_a, ref) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      style = _a.style,\n      children = _a.children,\n      icon = _a.icon,\n      color = _a.color,\n      onClose = _a.onClose,\n      closeIcon = _a.closeIcon,\n      _a$closable = _a.closable,\n      closable = _a$closable === void 0 ? false : _a$closable,\n      props = __rest(_a, [\"prefixCls\", \"className\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  React.useEffect(function () {\n    if ('visible' in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n\n  var isPresetColor = function isPresetColor() {\n    if (!color) {\n      return false;\n    }\n\n    return PresetColorRegex.test(color) || PresetStatusColorRegex.test(color);\n  };\n\n  var tagStyle = _extends({\n    backgroundColor: color && !isPresetColor() ? color : undefined\n  }, style);\n\n  var presetColor = isPresetColor();\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var tagClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(color), presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-has-color\"), color && !presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-hidden\"), !visible), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n\n  var handleCloseClick = function handleCloseClick(e) {\n    e.stopPropagation();\n    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    if (!('visible' in props)) {\n      setVisible(false);\n    }\n  };\n\n  var renderCloseIcon = function renderCloseIcon() {\n    if (closable) {\n      return closeIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }, closeIcon) : /*#__PURE__*/React.createElement(CloseOutlined, {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      });\n    }\n\n    return null;\n  };\n\n  var isNeedWave = 'onClick' in props || children && children.type === 'a';\n  var tagProps = omit(props, ['visible']);\n  var iconNode = icon || null;\n  var kids = iconNode ? /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(\"span\", null, children)) : children;\n  var tagNode = /*#__PURE__*/React.createElement(\"span\", _extends({}, tagProps, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, renderCloseIcon());\n  return isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, tagNode) : tagNode;\n};\n\nvar Tag = /*#__PURE__*/React.forwardRef(InternalTag);\nTag.displayName = 'Tag';\nTag.CheckableTag = CheckableTag;\nexport default Tag;","import { requestJSON, Method } from \"./fetch\";\r\nimport { URL_CLUSTER_NODES } from \"./url\";\r\n\r\nexport enum NodeStatus {\r\n  UP = \"UP\",\r\n  DOWN = \"DOWN\",\r\n}\r\n\r\nexport interface ClusterNodeInfo {\r\n  id: string,\r\n  ip: string,\r\n  port: number,\r\n  address: string,\r\n  status: NodeStatus,\r\n}\r\n\r\nexport function getClusterNodes() {\r\n  return requestJSON<void, Array<ClusterNodeInfo>>(URL_CLUSTER_NODES, Method.GET, undefined);\r\n}\r\n","import React from \"react\";\r\nimport { Table, Tag, message } from \"antd\";\r\nimport { getClusterNodes, ClusterNodeInfo, NodeStatus } from \"../../api/clusternode\";\r\n\r\nconst { useState, useEffect } = React;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"节点 ID\",\r\n    dataIndex: \"id\",\r\n    key: \"id\",\r\n  },\r\n  {\r\n    title: \"IP\",\r\n    dataIndex: \"ip\",\r\n    key: \"ip\",\r\n  },\r\n  {\r\n    title: \"端口\",\r\n    dataIndex: \"port\",\r\n    key: \"port\",\r\n  },\r\n  {\r\n    title: \"状态\",\r\n    dataIndex: \"status\",\r\n    key: \"status\",\r\n    render: (status: NodeStatus) => {\r\n      let color = \"green\";\r\n      if (status === NodeStatus.DOWN) {\r\n        color = \"red\";\r\n      }\r\n      return (\r\n        <Tag color={color}>\r\n          {status}\r\n        </Tag>\r\n      )\r\n    }\r\n  }\r\n];\r\n\r\nfunction CluserNodeList() {\r\n  const [clusterNodes, setClusterNodes] = useState([] as Array<ClusterNodeInfo>);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    getClusterNodes().then(data => {\r\n      setClusterNodes(data);\r\n      setLoading(false);\r\n    }).catch(e => {\r\n      message.error(\"获取集群节点失败：\" + e.message);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        rowKey={record => record.id}\r\n        columns={columns}\r\n        dataSource={clusterNodes}\r\n        loading={loading}\r\n        pagination={false} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CluserNodeList;\r\n"],"sourceRoot":""}