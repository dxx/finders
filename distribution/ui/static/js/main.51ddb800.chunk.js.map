{"version":3,"sources":["router/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["withSuspense","Component","props","Suspense","fallback","NamespaceList","React","lazy","ClusterNodeList","ServiceList","InstanceList","NotFound","router","path","element","Router","useRoutes","Header","Layout","Content","Sider","App","className","href","target","rel","GithubOutlined","width","style","position","mode","defaultSelectedKeys","height","borderRight","Item","icon","BarsOutlined","to","CloudOutlined","ApartmentOutlined","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAGMA,EAAe,SAACC,GACpB,OAAO,SAACC,GAAD,OACL,cAAC,IAAMC,SAAP,CAAgBC,SAAU,KAA1B,SACE,cAACH,EAAD,eAAeC,QAKfG,EAAgBL,EAAaM,IAAMC,MAAK,kBAAM,wDAC9CC,EAAkBR,EAAaM,IAAMC,MAAK,kBAAM,wDAChDE,EAAcT,EAAaM,IAAMC,MAAK,kBAAM,wDAC5CG,EAAeV,EAAaM,IAAMC,MAAK,kBAAM,+DAE7CI,EAAW,kBAAO,0FAElBC,EAAS,CACb,CACEC,KAAM,qBACNC,QAAS,cAACL,EAAD,KAEX,CACEI,KAAM,cACNC,QAAS,cAACT,EAAD,KAEX,CACEQ,KAAM,iBACNC,QAAS,cAACN,EAAD,KAEX,CACEK,KAAM,YACNC,QAAS,cAACL,EAAD,KAEX,CACEI,KAAM,qCACNC,QAAS,cAACJ,EAAD,KAEX,CACEG,KAAM,IACNC,QAAS,cAAC,EAAD,MAMEC,EAFA,kBAAMC,YAAUJ,I,oDC/BvBK,EAA2BC,IAA3BD,OAAQE,EAAmBD,IAAnBC,QAASC,EAAUF,IAAVE,MA+BVC,MA7Bf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAQC,UAAU,MAAlB,UACE,eAACL,EAAD,CAAQK,UAAU,SAAlB,UACE,sBAAMA,UAAU,OAAhB,qBACA,mBAAGA,UAAU,SAASC,KAAK,iCAAiCC,OAAO,SAASC,IAAI,aAAhF,SAA6F,cAACC,EAAA,EAAD,SAE/F,cAACN,EAAD,CAAOO,MAAO,IAAKL,UAAU,QAAQM,MAAO,CAAEC,SAAU,SAAxD,SACE,eAAC,IAAD,CACEC,KAAK,SACLC,oBAAqB,CAAC,KACtBH,MAAO,CAAEI,OAAQ,OAAQC,YAAa,GAHxC,UAKE,cAAC,IAAKC,KAAN,CAAmBC,KAAM,cAACC,EAAA,EAAD,IAAzB,SAA2C,cAAC,IAAD,CAAMC,GAAG,YAAT,uCAA5B,KACf,cAAC,IAAKH,KAAN,CAAmBC,KAAM,cAACG,EAAA,EAAD,IAAzB,SAA4C,cAAC,IAAD,CAAMD,GAAG,cAAT,uCAA7B,KACf,cAAC,IAAKH,KAAN,CAAmBC,KAAM,cAACI,EAAA,EAAD,IAAzB,SAAgD,cAAC,IAAD,CAAMF,GAAG,iBAAT,uCAAjC,UAGnB,cAAC,IAAD,CAAQf,UAAU,cAAlB,SACE,cAACH,EAAD,CAASG,UAAU,eAAeM,MAAO,CAAEY,UAAW,QAAtD,SACE,cAAC,EAAD,cCvBGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.51ddb800.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useRoutes } from \"react-router-dom\";\r\n\r\nconst withSuspense = (Component: React.LazyExoticComponent<any>) => {\r\n  return (props: any) => (\r\n    <React.Suspense fallback={null}>\r\n      <Component {...props} />\r\n    </React.Suspense>\r\n  );\r\n}\r\n\r\nconst NamespaceList = withSuspense(React.lazy(() => import(\"../views/namespace/NamespaceList\")));\r\nconst ClusterNodeList = withSuspense(React.lazy(() => import(\"../views/clusternode/ClusterNodeList\")));\r\nconst ServiceList = withSuspense(React.lazy(() => import(\"../views/service/ServiceList\")));\r\nconst InstanceList = withSuspense(React.lazy(() => import(\"../views/instance/InstanceList\")));\r\n\r\nconst NotFound = () => (<div>请求的页面不存在！</div>)\r\n\r\nconst router = [\r\n  {\r\n    path: \"/static/index.html\",\r\n    element: <ServiceList />,\r\n  },\r\n  {\r\n    path: \"/namespaces\",\r\n    element: <NamespaceList />\r\n  },\r\n  {\r\n    path: \"/cluster/nodes\",\r\n    element: <ClusterNodeList />\r\n  },\r\n  {\r\n    path: \"/services\",\r\n    element: <ServiceList />\r\n  },\r\n  {\r\n    path: \"/:namespace/:serviceName/instances\",\r\n    element: <InstanceList />\r\n  },\r\n  {\r\n    path: \"*\",\r\n    element: <NotFound />\r\n  }\r\n];\r\n\r\nconst Router = () => useRoutes(router);\r\n\r\nexport default Router;\r\n","import React from \"react\";\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport { Layout, Menu } from 'antd';\nimport Router from \"./router\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\n\nimport {\n  GithubOutlined,\n  BarsOutlined,\n  CloudOutlined,\n  ApartmentOutlined,\n} from \"@ant-design/icons\";\n\nconst { Header, Content, Sider } = Layout;\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout className=\"app\">\n        <Header className=\"header\">\n          <span className=\"logo\">Finders</span>\n          <a className=\"github\" href=\"https://github.com/dxx/finders\" target=\"_blank\" rel=\"noreferrer\"><GithubOutlined/></a>\n        </Header>\n        <Sider width={200} className=\"sider\" style={{ position: 'fixed' }}>\n          <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['1']}\n            style={{ height: '100%', borderRight: 0 }}\n          >\n            <Menu.Item key=\"1\" icon={<BarsOutlined />}><Link to=\"/services\">服务列表</Link></Menu.Item>\n            <Menu.Item key=\"2\" icon={<CloudOutlined />}><Link to=\"/namespaces\">命名空间</Link></Menu.Item>\n            <Menu.Item key=\"3\" icon={<ApartmentOutlined />}><Link to=\"/cluster/nodes\">集群节点</Link></Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"main-layout\">\n          <Content className=\"main-content\" style={{ minHeight: 'auto' }}>\n            <Router />\n          </Content>\n        </Layout>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}