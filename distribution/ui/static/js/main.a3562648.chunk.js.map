{"version":3,"sources":["router/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["withSuspense","Component","props","Suspense","fallback","NamespaceList","React","lazy","ClusterNodeList","ServiceList","InstanceList","NotFound","router","path","element","Router","useRoutes","Header","Layout","Content","Sider","menus","key","name","icon","BarsOutlined","CloudOutlined","ApartmentOutlined","App","defaultKey","find","item","window","location","pathname","locale","zhCN","className","href","target","rel","GithubOutlined","width","style","position","mode","defaultSelectedKeys","height","borderRight","map","menu","Item","to","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAGMA,EAAe,SAACC,GACpB,OAAO,SAACC,GAAD,OACL,cAAC,IAAMC,SAAP,CAAgBC,SAAU,KAA1B,SACE,cAACH,EAAD,eAAeC,QAKfG,EAAgBL,EAAaM,IAAMC,MAAK,kBAAM,wDAC9CC,EAAkBR,EAAaM,IAAMC,MAAK,kBAAM,wDAChDE,EAAcT,EAAaM,IAAMC,MAAK,kBAAM,wDAC5CG,EAAeV,EAAaM,IAAMC,MAAK,kBAAM,+DAE7CI,EAAW,kBAAO,0FAElBC,EAAS,CACb,CACEC,KAAM,qBACNC,QAAS,cAACL,EAAD,KAEX,CACEI,KAAM,cACNC,QAAS,cAACT,EAAD,KAEX,CACEQ,KAAM,iBACNC,QAAS,cAACN,EAAD,KAEX,CACEK,KAAM,YACNC,QAAS,cAACL,EAAD,KAEX,CACEI,KAAM,qCACNC,QAAS,cAACJ,EAAD,KAEX,CACEG,KAAM,IACNC,QAAS,cAAC,EAAD,MAMEC,EAFA,kBAAMC,YAAUJ,I,oDC9BvBK,EAA2BC,IAA3BD,OAAQE,EAAmBD,IAAnBC,QAASC,EAAUF,IAAVE,MAEnBC,EAAQ,CACZ,CACEC,IAAK,WACLT,KAAM,YACNU,KAAM,2BACNC,KAAM,cAACC,EAAA,EAAD,KAER,CACEH,IAAK,aACLT,KAAM,cACNU,KAAM,2BACNC,KAAM,cAACE,EAAA,EAAD,KAER,CACEJ,IAAK,QACLT,KAAM,iBACNU,KAAM,2BACNC,KAAM,cAACG,EAAA,EAAD,MA4CKC,MAxCf,WACE,IAAIC,EAAaR,EAAM,GAAGC,IACtBT,EAAOQ,EAAMS,MAAK,SAAAC,GAAI,OAAIA,EAAKlB,OAASmB,OAAOC,SAASC,YAI5D,OAHIrB,IACFgB,EAAahB,EAAKS,KAGlB,cAAC,IAAD,CAAgBa,OAAQC,IAAxB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAQC,UAAU,MAAlB,UACE,eAACpB,EAAD,CAAQoB,UAAU,SAAlB,UACE,sBAAMA,UAAU,OAAhB,qBACA,mBAAGA,UAAU,SAASC,KAAK,iCAAiCC,OAAO,SAASC,IAAI,aAAhF,SAA6F,cAACC,EAAA,EAAD,SAE/F,cAACrB,EAAD,CAAOsB,MAAO,IAAKL,UAAU,QAAQM,MAAO,CAAEC,SAAU,SAAxD,SACE,cAAC,IAAD,CACEC,KAAK,SACLC,oBAAqB,CAACjB,GACtBc,MAAO,CAAEI,OAAQ,OAAQC,YAAa,GAHxC,SAMI3B,EAAM4B,KAAI,SAAAC,GACR,OACE,cAAC,IAAKC,KAAN,CAA0B3B,KAAM0B,EAAK1B,KAArC,SAA2C,cAAC,IAAD,CAAM4B,GAAIF,EAAKrC,KAAf,SAAsBqC,EAAK3B,QAAtD2B,EAAK5B,YAM/B,cAAC,IAAD,CAAQe,UAAU,cAAlB,SACE,cAAClB,EAAD,CAASkB,UAAU,eAAeM,MAAO,CAAEU,UAAW,QAAtD,SACE,cAAC,EAAD,gBCvDCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a3562648.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useRoutes } from \"react-router-dom\";\r\n\r\nconst withSuspense = (Component: React.LazyExoticComponent<any>) => {\r\n  return (props: any) => (\r\n    <React.Suspense fallback={null}>\r\n      <Component {...props} />\r\n    </React.Suspense>\r\n  );\r\n}\r\n\r\nconst NamespaceList = withSuspense(React.lazy(() => import(\"../views/namespace/NamespaceList\")));\r\nconst ClusterNodeList = withSuspense(React.lazy(() => import(\"../views/clusternode/ClusterNodeList\")));\r\nconst ServiceList = withSuspense(React.lazy(() => import(\"../views/service/ServiceList\")));\r\nconst InstanceList = withSuspense(React.lazy(() => import(\"../views/instance/InstanceList\")));\r\n\r\nconst NotFound = () => (<div>请求的页面不存在！</div>)\r\n\r\nconst router = [\r\n  {\r\n    path: \"/static/index.html\",\r\n    element: <ServiceList />,\r\n  },\r\n  {\r\n    path: \"/namespaces\",\r\n    element: <NamespaceList />\r\n  },\r\n  {\r\n    path: \"/cluster/nodes\",\r\n    element: <ClusterNodeList />\r\n  },\r\n  {\r\n    path: \"/services\",\r\n    element: <ServiceList />\r\n  },\r\n  {\r\n    path: \"/:namespace/:serviceName/instances\",\r\n    element: <InstanceList />\r\n  },\r\n  {\r\n    path: \"*\",\r\n    element: <NotFound />\r\n  }\r\n];\r\n\r\nconst Router = () => useRoutes(router);\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Link } from \"react-router-dom\";\r\nimport { ConfigProvider, Layout, Menu } from \"antd\";\r\nimport zhCN from \"antd/lib/locale/zh_CN\";\r\nimport Router from \"./router\";\r\nimport \"./App.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport {\r\n  GithubOutlined,\r\n  BarsOutlined,\r\n  CloudOutlined,\r\n  ApartmentOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nconst menus = [\r\n  {\r\n    key: \"services\",\r\n    path: \"/services\",\r\n    name: \"服务列表\",\r\n    icon: <BarsOutlined />\r\n  },\r\n  {\r\n    key: \"namespaces\",\r\n    path: \"/namespaces\",\r\n    name: \"命名空间\",\r\n    icon: <CloudOutlined />\r\n  },\r\n  {\r\n    key: \"nodes\",\r\n    path: \"/cluster/nodes\",\r\n    name: \"集群节点\",\r\n    icon: <ApartmentOutlined />\r\n  }\r\n];\r\n\r\nfunction App() {\r\n  let defaultKey = menus[0].key;\r\n  let path = menus.find(item => item.path === window.location.pathname);\r\n  if (path) {\r\n    defaultKey = path.key;\r\n  }\r\n  return (\r\n    <ConfigProvider locale={zhCN}>\r\n      <BrowserRouter>\r\n        <Layout className=\"app\">\r\n          <Header className=\"header\">\r\n            <span className=\"logo\">Finders</span>\r\n            <a className=\"github\" href=\"https://github.com/dxx/finders\" target=\"_blank\" rel=\"noreferrer\"><GithubOutlined/></a>\r\n          </Header>\r\n          <Sider width={200} className=\"sider\" style={{ position: 'fixed' }}>\r\n            <Menu\r\n              mode=\"inline\"\r\n              defaultSelectedKeys={[defaultKey]}\r\n              style={{ height: '100%', borderRight: 0 }}\r\n            >\r\n              {\r\n                menus.map(menu => {\r\n                  return (\r\n                    <Menu.Item key={menu.key} icon={menu.icon}><Link to={menu.path}>{menu.name}</Link></Menu.Item>\r\n                  );\r\n                })\r\n              }\r\n            </Menu>\r\n          </Sider>\r\n          <Layout className=\"main-layout\">\r\n            <Content className=\"main-content\" style={{ minHeight: 'auto' }}>\r\n              <Router />\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </BrowserRouter>\r\n    </ConfigProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}