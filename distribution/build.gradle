import groovy.text.SimpleTemplateEngine

plugins {
    id 'application'
}

description = "Finders Distribution"

java {
    archivesBaseName = 'finders-starter'
}

application {
    mainClassName = 'io.github.dxx.finders.Starter'
}

dependencies {
    implementation(project(":server"))
}

// Use custom script templates
tasks.withType(CreateStartScripts) {
    applicationName = 'startup'

    def unixScriptFile = 'script/UnixStartupScript.txt'
    def winScriptFile = 'script/WinStartupScript.txt'
    assert project.file(unixScriptFile).exists()
    assert project.file(winScriptFile).exists()
    unixStartScriptGenerator.template = resources.text.fromFile(file(unixScriptFile))
    windowsStartScriptGenerator.template = resources.text.fromFile(file(winScriptFile))
}

// Create shutdown scripts
task createShutdownScripts {
    def scripts = file("$buildDir/scripts")
    // outputs.dir scripts
    doLast {
        if (!scripts.exists()) {
            scripts.mkdirs()
        }
        def binding = ["mainClassName": mainClassName]
        def unixEngine = new SimpleTemplateEngine()
        def unixTemplate = unixEngine.createTemplate(file('script/UnixShutdownScript.txt').getText()).make(binding)
        new File(scripts, 'shutdown').write(unixTemplate.toString())

        def winEngine = new SimpleTemplateEngine()
        def winTemplate = winEngine.createTemplate(file('script/WinShutdownScript.txt').getText()).make(binding)
        new File(scripts, 'shutdown.bat').write(winTemplate.toString())
    }
}

distributions {
    main {
        distributionBaseName = 'finders'
        contents {
            // Copy config file
            from('conf') {
                into 'conf'
            }
            // Copy console ui file
            from('ui') {
                into 'ui'
            }
            // Trigger the task
            from(createShutdownScripts) {
                exclude '*'
            }
        }
    }
}
