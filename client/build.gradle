plugins {
    id "java-library"
    id "maven-publish"
}

description = "Finders Client"

java {
    archivesBaseName = "finders-client"
    withSourcesJar()
    withJavadocJar()
}

dependencies {
    // OkHttp
    api "com.squareup.okhttp3:okhttp:${okhttpVersion}"

    // Jackson
    api "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    api "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    api "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    api "org.slf4j:slf4j-api:${slf4jVersion}"

    // Junit5
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
}

test {
    useJUnitPlatform()
}

jar {
    into("META-INF/") {
        from rootProject.file("LICENSE")
    }
    into("META-INF/maven/${project.group}/${project.name}") {
        from { generatePomFileForMavenJavaPublication }
        rename ".*", "pom.xml"
    }
    afterEvaluate {
        manifest {
            attributes "Implementation-Title": archiveBaseName
            attributes "Implementation-Version": archiveVersion
            attributes "Build-Gradle": gradle.gradleVersion
            attributes "Build-Jdk": System.getProperty("java.version")
            attributes "Build-Timestamp": LocalDateTime.now().format("yyyy-MM-dd HH:mm:ss")
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName

            from components.java

            pom {
                afterEvaluate {
                    name = archivesBaseName
                    description = project.description
                }

                url = "https://github.com/dxx/finders"

                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        id = "dxx"
                        name = "dxx"
                        email = "dx1898@foxmail.com"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/dxx/finders.git"
                    developerConnection = "scm:git:ssh://github.com/dxx/finders.git"
                    url = "https://github.com/dxx/finders"
                }
            }
        }
    }

    repositories {
        mavenLocal()

        maven {
            def sonatypeUsername = project.hasProperty("sonatypeUsername") ?
                    project.getProperties().get("sonatypeUsername") : ""
            def sonatypePassword = project.hasProperty("sonatypePassword") ?
                    project.getProperties().get("sonatypePassword") : ""

            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
    }
}
